-- ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
-- ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
--  üçø SNACKS.NVIM - Ultimate Multi‚ÄëFeature Plugin Suite
--  üíÄ Advanced Skull Dashboard | üîî Smart Notifications | üé® Theme Integration
--  üöÄ Performance Optimized | ‚ö° All Features Enabled | üåô Dark Theme Ready

return {
    "folke/snacks.nvim",
    priority = 1000,
    lazy = false,
    dependencies = {
        "nvim-tree/nvim-web-devicons",
        "MunifTanjim/nui.nvim",
    },

    config = function()
        local ok, snacks = pcall(require, "snacks")
        if not ok then
            vim.notify("Snacks.nvim not loaded", vim.log.levels.WARN)
            return
        end

        -- Masterpiece dashboard with perfect alignment and full ASCII
        snacks.setup({
            dashboard = {
                enabled = true,
                width = 90, -- Better width
                height = 40, -- Better height for alignment
                pane_gap = 20, -- Good gap
                row = nil, -- Center vertically
                col = nil, -- Center horizontally
                sections = {
                    {
                        pane = 1,
                        align = "center",
                        padding = { 0, 1, 3, 3 },
                        text = [[




‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£ò‚£∂‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°è‚†à‚°á‚†ø‚¢∂‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚°Ä‚°∏‚†Å‚¢∞‚£á‚†Ä‚†à‚¢â‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚¢≥‚°Ä‚¢Ä‚£†‚†É‚°Ä‚†Ä‚£º‚£á‚†Ä‚†Ä‚†Ä‚£∏‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚¢®‚°∑‚†ö‚†Ä‚†Ä‚†ª‚¢∂‚£ø‚†É‚£§‚°∂‚†õ‚†π‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†§‚†î‚°â‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚°ñ‚†É‚†Ä‚†Ä‚†Ä‚¢Ñ‚¢∏‚£ß‚¢Ä‚††‚†Ñ‚†Ä‚†Ä‚†õ‚£ø‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚¢º‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†¶‚°º‚†â‚†Ä‚£∏‚†Å‚†õ‚£∂‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ü‚†Å‚†Ä‚†Ä‚†Ä‚¢§‚°å‚£ø‚£∑‚†•‚†í‚†í‚†ö‚†Ä‚†à‚†ô‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚¢†‚†ã‚†Ä‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†æ‚£Ü‚†Ä‚¢†‚¢†‚°è‚¢Ä‚°ò‚£≥‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚¢â‚£ø‚£Ä‚†Ä‚†Ä‚¢®‚¢ø‚£ø‚£ø‚£•‚†ñ‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚¢Ä‚£π‚£§‚£Ñ‚£Ä‚°á‚†Ä‚¢Ä‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚†¥‚†è‚†Ä‚†Ä‚†∏‚†∑‚†à‚£ø‚°ø‚£ã‚£Ä‚£®‚£ø‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚¢∏‚£ø‚£ø‚£∑‚†¥‚†ö‚£ø‚°ü‚†â‚¢Ω‚£Ñ‚£Ä‚†í‚£§‚£¨‚£ø‚£ø‚£ø‚°ü‚£õ‚°ª‚†á‚†Ä‚¢ò‚£ü‚£Ä‚°Ä‚†Ä‚¢†‚£∂‚†ö‚†â‚†Ä‚††‚£Ñ‚†Ä‚°Ä‚¢†‚¢∏‚°ø‚†ô‚†õ‚†â‚†Ä‚†ª‚¢§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£û‚£¥‚¢ª‚£ø‚£ø‚£É‚†Ä‚°ü‚†Ä‚†ê‚£∂‚£ø‚£ø‚£ø‚£ø‚£õ‚£ø‚£ø‚£ø‚£ø‚£∂‚°à‚°Ü‚°Ñ‚†à‚¢â‚£â‚°â‚£¶‚†Ä‚¢π‚°ü‚†Ä‚†Ä‚††‚°à‚¢¢‚¢π‚°à‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚£Ä‚†ò‚¢ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢æ‚£≠‚£ø‚£ã‚£ª‚£ø‚°ø‚£ª‚°á‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚£©‚£ü‚£â‚£ø‚£ø‚£ø‚£ø‚£á‚£†‚°ß‚£¥‚£ø‚£ø‚¢ø‚£ü‚°≤‚£æ‚£ø‚£á‚†Ä‚†Ä‚†ô‚¢¶‚¢£‚£∑‚£á‚°§‚†í‚†õ‚†∑‚†¶‚£Ñ‚£∏‚£á‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∂‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚¢ø‚†ø‚£ø‚°ø‚££‚†ã‚†≥‚°ô‚¢ø‚£ø‚£ø‚£ø‚°ø‚¢É‚°ô‚£ø‚£ø‚£ø‚£ø‚£ø‚°∂‚£∂‚¢∂‚£Ω‚£ø‚£ø‚£ø‚†ø‚¢∑‚£æ‚£ø‚£ø‚£ó‚¢Ç‚£Ä‚£∏‚£æ‚£ø‚£ó‚†ä‚†≠‚†ç‚†â‚†â‚†Å‚£Ä‚£à‚£π‚†Ä‚†Ä‚¢Ä‚°ú‚¢π‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚°ö‚£õ‚°º‚†ô‚†í‚†ä‚¢Å‚£§‚£Ñ‚†à‚†ë‚†í‚†¨‚†î‚†ö‚†ã‚†â‚†ö‚†≠‚£ø‚£Ø‚†≠‚†ñ‚†õ‚¢ú‚¢ø‚£ø‚£ø‚£ø‚†ü‚¢ª‚£ß‚£æ‚£ø‚£ø‚£§‚£§‚£®‚£ø‚†ã‚†â‚¢Å‚£Ä‚£Ä‚£§‚†ñ‚†õ‚†â‚†â‚†Å‚†Ä‚¢†‚†é‚†Ä‚¢∏‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚°ø‚†Å‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†è‚¢Å‚°¥‚£ì‚£í‚£í‚†≠‚†≤‚¢Ø‚°≥‚†¶‚£§‚£§‚†§‚£ñ‚£†‚£∂‚£Ñ‚°Ä‚†Ä‚†Ä‚£Ä‚£§‚°Ñ‚†Ä‚†ë‚†≤‚†≠‚†µ‚†∂‚°ú‚¢ø‚£ø‚£ø‚£ø‚°ø‚¢ã‚£º‚¢±‚£ü‚£∂‚£Æ‚£Ω‚£ø‚£ß‚£Ñ‚°Ä‚¢Ä‚†ñ‚†í‚†¢‚°ü‚†Ä‚†¥‚£æ‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚°æ‚†ã‚£§‚£§‚£§‚£§‚†∫‚°Ω‚†Ä‚£¥‚°Ñ‚¢Å‚£§‚°ç‚¢Å‚£≥‚†ç‚†õ‚†õ‚†â‚†ô‚¢õ‚£ü‚†ø‚°¶‚¢§‚£Ä‚£§‚†§‚£Ñ‚†à‚†í‚†¨‚†≠‚†≠‚†î‚†ã‚¢π‚°ú‚£è‚°ª‚£ø‚£ª‚£Ω‚†õ‚£ß‚¢º‚£ø‚£ü‚£¶‚†Ä‚†Ä‚¢ê‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚°ú‚£ª‚¢ø‚£∏‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†õ‚†Ç‚†Ü‚£â‚£à‚£Å‚£†‚£∏‚£∑‚£§‚£å‚£Å‚£Ä‚£â‚£•‚£¥‚£§‚£Ä‚°ö‚†É‚†ä‚†ó‚†à‚°ã‚†ê‚°∂‚¢Ä‚£Ä‚¢©‚£≠‚†ª‚†ì‚°¶‚£§‚£§‚°§‚†¥‚¢∂‚°Ä‚†≥‚£à‚†ª‚¢ù‚£õ‚†ø‚†ü‚£∑‚£º‚£ø‚£ü‚£ø‚°Ñ‚£∞‚£æ‚¢ü‚£ø‚°¶‚†Ä‚†Ä‚°º‚£ø‚°á‚£∏‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚££‚£§‚£∂‚†ø‚°´‚£ù‚£ª‚¢ø‚£õ‚†õ‚†ª‚£ç‚°ô‚†ª‚¢ø‚£≠‚°≠‚†≠‚†ø‚†õ‚†õ‚†ì‚¢í‚£í‚£ì‚£¢‚£Ä‚£à‚£Å‚£Ä‚£â‚†Ä‚¢∂‚†é‚¢©‚£Ω‚¢â‚£§‚¢ª‚°≥‚£Ä‚†à‚†ë‚†í‚†í‚†ã‚¢ª‚£ª‚£ø‚£ø‚£Ω‚£ø‚£õ‚¢ø‚£ø‚£õ‚£ø‚£á‚£Ä‚£º‚¢£‚£ø‚£ø‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°†‚†ñ‚†ã‚¢´‚£ø‚¢°‚£æ‚¢û‚£Å‚°º‚¢ü‚£®‚†∑‚†Ä‚£Ä‚†Ω‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚°ñ‚†õ‚†ã‚†â‚£â‚£â‚£â‚°©‚£ç‚°â‚†õ‚¢ø‚°õ‚†∑‚£¶‚£§‚£¨‚£≠‚†º‚†ã‚¢Ä‚£†‚†™‚£µ‚£í‚£≤‚£í‚£¶‚†Ä‚†π‚¢ü‚£ø‚£ª‚£ø‚£π‚£ø‚°ø‚£º‚£ß‚£ø‚°Ü‚°û‚£∏‚£ø‚£π‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°Æ‚£¥‚†Ç‚£Ä‚°Ä‚†â‚†ª‚£Ø‚£≥‚£¨‚†∂‚†ã‚£°‚¢î‚†ã‚¢Å‚£†‚†∂‚†û‚†¢‚†Ñ‚†â‚†ª‚£∂‚£Ñ‚†ô‚†´‚£î‚¢ø‚°õ‚†í‚¢Ø‚°≤‚£Ñ‚†à‚†≥‚£Ñ‚†ô‚†ª‚°õ‚†ª‚†∑‚£¶‚£â‚†à‚†©‚†Ä‚£¥‚°ü‚¢æ‚¢Ø‚£ø‚°ø‚£ü‚¢ø‚£ø‚£Ø‚£á‚¢¢‚¢ø‚£ø‚£ø‚†ü‚£ª‚†ô‚£ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£ø‚¢∞‚†è‚£∏‚†è‚£è‚£ì‚£§‚£ø‚£ø‚£∑‚£∂‚£ø‚£∑‚£ß‚£æ‚£≠‚£§‚£†‚£Ä‚£Ä‚¢Ä‚£Ä‚¢Ä‚£Ä‚†ô‚†≥‚£Ñ‚°à‚†≥‚¢≠‚†ø‚†≠‚†•‚†æ‚†á‚†Ä‚¢à‚°¶‚†Ä‚†ò‚†≤‚†í‚†í‚†õ‚†õ‚†≤‚†¶‚£ø‚£Ñ‚†ã‚†è‚†©‚†ø‚£ø‚£∂‚°é‚†õ‚†ø‚£∑‚£ø‚£ø‚¢É‚†±‚£Ø‚£π‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£è‚£ø‚¢∏‚¢Ä‚£ø‚£∂‚°ø‚£ø‚°≠‚†Ø‚†§‚†§‚†ñ‚†í‚†ö‚†õ‚†Ä‚†É‚†Å‚†à‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†ª‚†∑‚†æ‚¢ø‚£¶‚£Ñ‚£Ä‚£§‚£§‚†§‚†ñ‚†ä‚†Å‚†Ä‚£Ä‚£Ä‚†Ä‚††‚°∂‚†∂‚†õ‚†õ‚†õ‚†õ‚†õ‚†∑‚£∂‚°∂‚†æ‚¢ø‚£ø‚£ø‚°¶‚£§‚£à‚£ª‚£ø‚£¶‚£†‚£ø‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£º‚£ø‚†ò‚£æ‚£ø‚†ü‚†ã‚†Ä‚†ò‚†∂‚£§‚£æ‚°Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ñ‚¢Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ü‚£ª‚£ø‚£∑‚£æ‚£ø‚£è‚£â‚†à‚¢ß‚°Ä‚†ô‚¢¶‚†Ä‚†õ‚£≠‚†ø‚¢ø‚£ß‚†Ä‚¢ª‚£∑‚£µ‚°™‚†ø‚£Ø‚£Ω‚£ø‚£Ω‚†ª‚£ü‚£ø‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ß‚£ø‚£ø‚£ø‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†ø‚°Å‚†Ä‚†Ä‚†Ä‚†Ä‚°ø‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚£§‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†π‚£Ñ‚†Ä‚†Ä‚†Ä‚†â‚†ô‚†ª‚¢ø‚°º‚¢ø‚£ß‚£Ñ‚£à‚£ß‚°Ä‚†∏‚°ü‚†õ‚¢ã‚°á‚†à‚£á‚†Å‚¢ø‚†É‚£å‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚†Ä‚†Ä‚†±‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚°Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†§‚£â‚°ø‚¢ø‚£∑‚£Ñ‚°Ä‚†Ä‚¢Ä‚£Ä‚°†‚†º‚†Ä‚†Ä‚†Å‚†Ä‚†à‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ú‚¢Ä‚¢Ä‚£§‚£∂‚£∑‚£æ‚£ø‚£∑‚°Ñ‚†Ä‚°á‚†Ä‚††‚¢Ñ‚†Ä‚†Ä‚¢ª‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä‚¢ø‚£Ñ‚†Ä‚¢Ä‚£§‚°∂‚†Ç‚††‚†ñ‚†Ä‚†í‚††‚†ç‚†ë‚†´‚¢ù‚°ª‚£Ø‚£Å‚£Ä‚£Ä‚£†‚£§‚£Ñ‚†Ä‚£æ‚†ã‚£â‚£ô‚¢ø‚£ø‚¢ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚†Ä‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚£∑‚†§‚£æ‚¢á‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚†Ä‚¢ª‚£ß‚£§‚°∏‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°Ä‚†Ä‚†ô‚†Å‚†â‚†í‚†Ω‚°ø‚£Ø‚£≠‚£Ä‚†∏‚°Ñ‚†∏‚°Ü‚¢Ω‚£ø‚£á‚¢∑‚£æ‚°É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚¢Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚°å‚†Ä‚†Ä‚†à‚£ø‚£ü‚£ª‚£ø‚£ø‚£á‚£Ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†à‚£ª‚†ü‚£ø‚£û‚°Ä‚†Ä‚¢†‚†Ä‚†Ä‚†à‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ë‚†ª‚£ø‚£∑‚£ß‚£Ñ‚£∑‚¢∏‚£ø‚£ø‚°º‚£Ω‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚†ª‚£ø‚°ü‚£Ω‚£ø‚£Ø‚£ª‚£ø‚£ß‚£º‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†ª‚¢ø‚£æ‚£ø‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚£æ‚£ø‚¢∞‚£ø‚£ø‚£ß‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ø‚£ø‚£ø‚£æ‚°ü‚°ª‚†á‚£ü‚£π‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚¢ø‚¢Ø‚£ø‚£ø‚†ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚¢≥‚°Ä‚†Ä‚†Ä‚†â‚†õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†É‚†Ä‚†Ä‚¢æ‚£ø‚£ø‚£ø‚£Ø‚£â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚¢Æ‚£ø‚£ø‚£∑‚£ä‚¢ø‚£Ω‚£ø‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Ä‚£∏‚£ø‚†Å‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£∑‚†Ä‚¢∏‚†Å‚†Ä‚†Ä‚†Ä‚°Ä‚°Ä‚†Ä‚†à‚†â‚†õ‚†õ‚†õ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†õ‚¢ª‚£ø‚£æ‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚†π‚£ø‚£ø‚£∑‚°ø‚£Ω‚°æ‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†Ä‚†Ä‚°ø‚†è‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚¢ø‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†à‚†∞‚†Ä‚£ø‚°ø‚†Ü‚†Ä‚†à‚†ô‚†í‚£∂‚°§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢à‚£ø‚£ø‚£ø‚£ø‚°ó‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†ò‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†ô‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚†ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ì‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£Ä‚£§‚£∂‚£¶‚£æ‚†π‚¢¶‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†∫‚£Ω‚£ø‚°ø‚¢ø‚¢∑‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢¶‚†Ä‚†Ä‚†Ä‚¢Ä‚£∂‚£ø‚°ß‚£§‚£§‚£®‚£ø‚†∑‚†¥‚£ã‚°Ä‚†à‚†ì‚†í‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚¢°‚£ù‚¢ª‚£ø‚£∑‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚£ø‚£Ü‚†Ä‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£§‚£Ä‚†Ä‚†à‚†Ä‚£Ä‚£¥‚£ü‚£ø‚£ø‚£ø‚£ù‚°ø‚¢Ø‚°ø‚¢∑‚£ø‚£ø‚£∑‚¢Ä‚£¥‚£ø‚¢∑‚£Ü‚†Ä‚†Ä‚†Å‚†í‚†¢‚†Ñ‚†§‚¢ñ‚¢ª‚¢ø‚°æ‚£¨‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ì‚†õ‚†ª‚£∂‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚†õ‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†é‚†Å‚†Å‚¢æ‚£ß‚£∂‚°æ‚†ü‚†ª‚¢ø‚£ø‚°ø‚†ã‚†Å‚†Ä‚°º‚†Å‚£à‚†ã‚†ô‚£ü‚£æ‚°ü‚†ª‚†ª‚£ü‚†Ä‚†Ä‚¢†‚†Ñ‚†â‚†Ä‚°Ä‚†ò‚£ú‚£∞‚°ù‚£Ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£´‚£ø‚¢∂‚°ü‚†Ä‚£ø‚†Ä‚¢∞‚°Ñ‚†Ä‚¢Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ú‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚†Ä‚¢Å‚†Ä‚†ê‚£Ü‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚°ø‚£¥‚£≥‚£ô‚†æ‚†ä‚†π‚£Ü‚†Ä‚†ê‚†É‚†Ä‚†Ä‚¢∏‚†Ä‚†Ñ‚°≥‚£∑‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†É‚¢á‚£É‚£∏‚£Ö‚£†‚£á‚£Ä‚£º‚°Å‚¢Ä‚°ø‚¢Ä‚£§‚£†‚£Ä‚°Ä‚†Ä‚¢Ä‚£á‚£Ä‚£∂‚£º‚£ø‚£ø‚†Ä‚†Ä‚¢ß‚†Ä‚†à‚†ß‚†Ä‚†Ä‚£Ω‚†ø‚£∂‚£ø‚£ø‚£ø‚£∑‚†ò‚†ì‚†Å‚†Ä‚¢Ä‚£§‚†Ä‚¢Ä‚£º‚¢≥‚°ª‚¢ê‚£ø‚£Ω‚£ø‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚°û‚°ø‚†õ‚°ü‚¢π‚†ü‚£ø‚†õ‚£ø‚†ø‚¢ø‚£ß‚£º‚£Ö‚£§‚£∏‚°è‚†â‚£ø‚†Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†ò‚°Ü‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ª‚°ø‚°ü‚£ø‚£º‚£è‚†Ä‚£á‚£∞‚£∂‚£ø‚£ø‚£ø‚°ü‚¢è‚†â‚£¥‚£ø‚£ø‚£æ‚£ø‚£ø‚°ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Ä‚†á‚†ò‚†Ä‚¢Å‚°ö‚†Ä‚†á‚†Ä‚†ø‚†Ä‚£º‚°á‚†à‚¢π‚°ü‚†â‚¢ª‚£ø‚†ø‚†ø‚£ø‚†è‚£ø‚£ø‚°ü‚†Ä‚¢∞‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚¢ø‚°ü‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£æ‚£ß‚£ø‚£ø‚£ø‚¢ø‚£ø‚£ø‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚°Ñ‚¢æ‚†Ä‚¢∞‚£¶‚¢°‚°å‚†í‚¢≤‚°Ñ‚†Ä‚°§‚†Ä‚†Ä‚¢à‚†Å‚†Ä‚†∏‚†á‚†Ä‚†õ‚†õ‚†õ‚¢â‚°û‚†Ä‚†Ä‚°ù‚†Ä‚†Ä‚†Ä‚¢†‚°∂‚¢ü‚£ø‚£ø‚£ø‚£ü‚£≤‚£ø‚†ø‚£õ‚£Ø‚£≥‚£ø‚£ø‚£ø‚£ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†É‚†Ä‚†Å‚†Ä‚¢∏‚†Å‚†Ä‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∞‚†ã‚†Ä‚†Ä‚£¥‚†á‚†Ä‚†Ä‚†º‚†Å‚†ê‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£ø‚£ø‚£ø‚£∫‚¢ø‚£ø‚£æ‚£ø‚£ø‚£ø‚£õ‚£ø‚£ü‚£Å‚£Ä‚††‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ü‚£ø‚†ø‚†ü‚£ü‚£´‚°Ö‚†Æ‚†°‚†Å‚†Ä‚†Ä‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£æ‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†ü‚°ø‚†è‚†è‚†à‚†Ä‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚†Ä‚†Ä‚¢†‚£§‚£§‚£§‚£§‚°§‚†§‚†§‚††‚†§‚£§‚£ñ‚£í‚£ö‚£ò‚£õ‚£ì‚£í‚£ì‚£∑‚£§‚£∂‚£æ‚£§‚£§‚£§‚£§‚£æ‚£ø‚¢ø‚°ø‚£ø‚£ß‚¢ø‚£ø‚£ø‚°ø‚†ü‚†í‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ß‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£æ‚£ø‚£û‚£Ø‚£∂‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ô‚†õ‚†õ‚†ø‚¢æ‚£ø‚£ø‚£ü‚£ú‚£ø‚£ø‚†ü‚†ã‚†â‚†Ä‚†Ä‚†Ä‚†à‚†ã‚†ª‚†ø‚†ø‚†û‚†õ‚†õ‚†õ‚†ã‚†â‚†â‚†â‚†â‚†ã‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä

                        ]]
                    },
                    {
                        pane = 2,
                        padding = { 14, 1 }, -- RULE: More top gap so content doesn't start too high
                        
                        -- Quick Actions heading with gap above
                        {
                            text = "",
                            padding = { 1, 0 },
                        },
                        {
                            text = "Quick Actions",
                            hl = "@comment",
                            padding = 0,
                            align = "left",
                        },
                        
                        -- Spacer after Quick Actions
                        {
                            text = "",
                            padding = { 0, 0 },
                        },
                        
                        -- FILES & SEARCH GROUP (Blue)
                        {
                            gap = 0,
                            padding = 1,
                            indent = 2, -- Reduced indent for better alignment
                            hl = "@function", -- Blue
                            {
                                icon = "Û∞àû ",
                                desc = "Find Files",
                                key = "f",
                                action = function() require("snacks.dashboard").pick('files') end,
                            },
                            {
                                icon = "Û∞ùí ",
                                desc = "New File",
                                key = "n",
                                action = ":ene | startinsert",
                            },
                            {
                                icon = "Û∞çâ ",
                                desc = "Find Text",
                                key = "g",
                                action = function() require("snacks.dashboard").pick('live_grep') end,
                            },
                            {
                                icon = "Û∞ãö ",
                                desc = "Recent Files", 
                                key = "r",
                                action = function() require("snacks.dashboard").pick('oldfiles') end,
                            },
                        },
                        
                        -- Small spacer
                        {
                            align = "left",
                            text = { "" },
                            padding = 0,
                        },
                        
                        -- PACKAGE MANAGEMENT GROUP (Purple)
                        {
                            gap = 0,
                            padding = 1,
                            indent = 2, -- Reduced indent for better alignment
                            hl = "@keyword", -- Purple
                            {
                                icon = "Û∞í≤ ",
                                desc = "Lazy",
                                key = "l",
                                action = ":Lazy",
                            },
                            {
                                icon = "Û∞Üé ",
                                desc = "Mason",
                                key = "m",
                                action = ":Mason",
                            },
                            {
                                icon = "Û∞èó ",
                                desc = "Mason Install",
                                key = "i",
                                action = function()
                                    vim.cmd("Mason")
                                end,
                            },
                            {
                                icon = "Û∞Ñµ ",
                                desc = "Update All",
                                key = "u",
                                action = function()
                                    vim.cmd("Lazy sync")
                                    vim.cmd("MasonUpdate")
                                end,
                            },
                        },
                        
                        -- Small spacer
                        {
                            align = "left",
                            text = { "" },
                            padding = 0,
                        },
                        
                        -- CONFIGURATION GROUP (Green)
                        {
                            gap = 0,
                            padding = 1,
                            indent = 2, -- Reduced indent for better alignment
                            hl = "@string", -- Green
                            {
                                icon = "Û∞ë∏ ",
                                desc = "Config",
                                key = "c",
                                action = function() require("snacks.dashboard").pick('files', {cwd = vim.fn.stdpath('config')}) end,
                            },
                            {
                                icon = "Û∞É¢ ",
                                desc = "Colorscheme",
                                key = "C",
                                action = ":Telescope colorscheme",
                            },
                            {
                                icon = "Û∞ôó ",
                                desc = "Health Check",
                                key = "h",
                                action = ":checkhealth",
                            },
                            {
                                icon = "Û∞Üå ",
                                desc = "Options",
                                key = "o",
                                action = ":Telescope vim_options",
                            },
                        },
                        
                        -- Small spacer
                        {
                            align = "left",
                            text = { "" },
                            padding = 0,
                        },
                        
                        -- SYSTEM & TOOLS GROUP (Orange)
                        {
                            gap = 0,
                            padding = 1,
                            indent = 2, -- Reduced indent for better alignment
                            hl = "@type", -- Orange
                            {
                                icon = "Û∞àÜ ",
                                desc = "Terminal",
                                key = "t",
                                action = ":terminal",
                            },
                            {
                                icon = "Û∞Äã ",
                                desc = "Session",
                                key = "s",
                                action = function() require("snacks.dashboard").pick('sessions') end,
                            },
                            {
                                icon = "Û∞Çæ ",
                                desc = "Dashboard",
                                key = "d",
                                action = function() require("snacks").dashboard.open() end,
                            },
                            {
                                icon = "Û∞©à ",
                                desc = "Quit",
                                key = "q",
                                action = ":qa",
                            },
                        },
                        
                        -- Spacer before recent files
                        {
                            align = "left",
                            text = { "" },
                            padding = 0,
                        },
                        
                        -- RULE: Recent files heading with gap above, newline after, newline before startup

                        {
                            text = "Recent Files",
                            hl = "@comment",
                            align = "left",
                            padding = { 0, 0 },
                        },
                        {
                            text = "",
                            padding = { 0, 0 },
                        },
                        -- Recent files list (up to 25, correct numbering)
                        {
                            section = "recent_files",
                            indent = 2,
                            padding = 0,
                            limit = 25, -- RULE: Show up to 25 files
                            file = function(file, idx)
                                -- RULE: Correct count beyond 9 (no random alphabets)
                                local key = (idx <= 9 and tostring(idx)) or (idx == 10 and "0") or ""
                                return {
                                    icon = "Û∞àî",
                                    key = key,
                                    action = function() vim.cmd('edit ' .. file) end,
                                    desc = string.format("%2d. %-60s", idx, file),
                                }
                            end,
                        },
                        {
                            text = "",
                            padding = { 1, 0 },
                        },
                        { section = "startup" },
                    },
                },
            },

            -- Basic notifier with safe settings
            notifier = {
                enabled = false,
            },
            
            -- ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
            -- üçø GROUP A: SAFE UTILITIES (Added feature by feature)
            -- ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
            
            -- 1Ô∏è‚É£ BIGFILE: Auto-optimize for large files (>1.5MB)
            bigfile = {
                enabled = true,
                notify = true,
                size = 1.5 * 1024 * 1024, -- 1.5MB threshold
                setup = function(ctx)
                    -- Disable heavy features for large files
                    vim.schedule(function()
                        vim.bo[ctx.buf].syntax = ctx.ft
                    end)
                end,
            },
            
            -- 2Ô∏è‚É£ BUFDELETE: Smart buffer deletion without disrupting layout
            bufdelete = { 
                enabled = true 
            },
            
            -- 3Ô∏è‚É£ DEBUG: Developer tools - inspect & backtrace
            debug = { 
                enabled = true 
            },
            
            -- 4Ô∏è‚É£ GITBROWSE: Open file/commit in browser (GitHub, GitLab, etc)
            gitbrowse = { 
                enabled = true 
            },
            
            -- 5Ô∏è‚É£ PROFILER: Performance profiling for Neovim
            profiler = { 
                enabled = true 
            },
            
            -- 6Ô∏è‚É£ QUICKFILE: Fast file rendering before plugins load
            quickfile = { 
                enabled = true 
            },
            
            -- 7Ô∏è‚É£ RENAME: LSP-integrated file renaming
            rename = { 
                enabled = true 
            },
            
            -- 8Ô∏è‚É£ SCRATCH: Persistent scratch buffers
            scratch = {
                enabled = true,
                name = "scratch",
                ft = function()
                    if vim.bo.buftype == "" and vim.bo.filetype == "" then
                        return "markdown"
                    end
                    return vim.bo.filetype
                end,
                icon = "üìù",
                root = vim.fn.stdpath("data") .. "/scratch",
            },
            
            -- ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
            -- üé® GROUP B: VISUAL ENHANCEMENTS (Added feature by feature)
            -- ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
            
            -- 9Ô∏è‚É£ ANIMATE: Animation library for smooth UI transitions
            animate = {
                enabled = false,
                duration = 20,
                easing = "linear",
                fps = 60,
            },
            
            -- üîü DIM: Focus on active scope by dimming inactive code
            dim = {
                enabled = false,
                scope = {
                    min_size = 5,
                    max_size = 20,
                    siblings = true,
                },
                animate = {
                    enabled = vim.fn.has("nvim-0.10") == 1,
                    easing = "outQuad",
                    duration = {
                        step = 10,
                        total = 300,
                    },
                },
            },
            
            -- 1Ô∏è‚É£1Ô∏è‚É£ SCROLL: Smooth scrolling with animations
            scroll = {
                enabled = false,
                animate = {
                    duration = { step = 15, total = 250 },
                    easing = "linear",
                },
                spamming = 10,
            },
            
            -- 1Ô∏è‚É£2Ô∏è‚É£ STATUSCOLUMN: Enhanced status column with git/marks/folds
            statuscolumn = {
                enabled = false,
                left = { "mark", "sign" },
                right = { "fold", "git" },
                folds = {
                    open = true,
                    git_hl = false,
                },
                git = {
                    patterns = { "GitSign", "MiniDiffSign" },
                },
                refresh = 50,
            },
            
            -- 1Ô∏è‚É£3Ô∏è‚É£ WORDS: Auto-show LSP references + quick navigation
            words = {
                enabled = false,
                debounce = 200,
                notify_jump = false,
                notify_end = true,
                foldopen = true,
                jumplist = true,
                modes = { "n", "i", "c" },
            },
            
            -- TOGGLE: Required for dim/scroll toggles (also useful for other toggles)
            toggle = {
                enabled = false,
                which_key = true,
                notify = true,
                map = vim.keymap.set,
            },
            
            -- ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
            -- üöÄ GROUP C: ADVANCED FEATURES (Added with care)
            -- ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
            
            -- 1Ô∏è‚É£4Ô∏è‚É£ LAYOUT: Window layout management
            layout = {
                enabled = false,
                preset = {
                    float = {
                        backdrop = 60,
                    },
                    split = {
                        wo = {
                            winbar = "",
                        },
                    },
                },
            },
            
            -- 1Ô∏è‚É£5Ô∏è‚É£ LAZYGIT: LazyGit integration with colorscheme sync
            lazygit = {
                enabled = false,
                configure = true, -- Auto-configure colorscheme
                theme = {
                    [241]                      = { fg = "Special" },
                    activeBorderColor          = { fg = "MatchParen", bold = true },
                    cherryPickedCommitBgColor  = { fg = "Identifier" },
                    cherryPickedCommitFgColor  = { fg = "Function" },
                    defaultFgColor             = { fg = "Normal" },
                    inactiveBorderColor        = { fg = "FloatBorder" },
                    optionsTextColor           = { fg = "Function" },
                    searchingActiveBorderColor = { fg = "MatchParen", bold = true },
                    selectedLineBgColor        = { bg = "Visual" },
                    unstagedChangesColor       = { fg = "DiagnosticError" },
                },
                win = {
                    style = "lazygit",
                    position = "float",
                    backdrop = 60,
                    height = 0.9,
                    width = 0.9,
                    zindex = 50,
                    border = "rounded",
                },
            },
            
            -- 1Ô∏è‚É£6Ô∏è‚É£ SCOPE: Scope detection and text objects
            scope = {
                enabled = false,
                keys = {
                    textobjects = true,
                },
            },
            
            -- 1Ô∏è‚É£7Ô∏è‚É£ EXPLORER: Modern file explorer (replaces neo-tree)
            explorer = {
                enabled = true,
                filter = function(file)
                    -- Hide common unwanted files
                    local name = vim.fn.fnamemodify(file, ":t")
                    return not vim.tbl_contains({
                        ".DS_Store",
                        "thumbs.db",
                        ".git",
                        "node_modules",
                        "__pycache__",
                    }, name)
                end,
            },

            -- Enable other features safely
            styles = {
                dashboard = {
                    fixbuf = false,
                    wo = {
                        number = false,
                        relativenumber = false,
                        cursorline = false,  -- Disable cursorline on dashboard
                        cursorcolumn = false, -- Disable cursorcolumn on dashboard
                        wrap = false,
                        scrolloff = 0,
                        sidescrolloff = 0,
                        signcolumn = "no",
                        spell = false,
                        statuscolumn = "",
                        list = false,
                        colorcolumn = "",
                        foldmethod = "manual",
                        scrollbind = false,
                    },
                    bo = {
                        modifiable = false,
                        bufhidden = "wipe",
                        buftype = "nofile",
                        buflisted = false,
                        swapfile = false,
                        undofile = false,
                        readonly = true,
                    },
                },
            },
        })

        -- Open-only mapping: avoids toggling/session side-effects
        vim.keymap.set('n', '<leader>0', function()
            if vim.bo.filetype ~= 'snacks_dashboard' then
                snacks.dashboard.open()
            end
        end, { desc = 'Open Dashboard' })
        
        -- Setup keymaps (dashboard only)
        vim.keymap.set("n", "<leader>db", function()
            snacks.dashboard.open()
        end, { desc = "Open Dashboard" })

        -- Dashboard setup - minimal restrictions, allow normal navigation
        local dashboard_group = vim.api.nvim_create_augroup("SnacksDashboardSetup", { clear = true })
        
        vim.api.nvim_create_autocmd("FileType", {
            group = dashboard_group,
            pattern = "snacks_dashboard",
            callback = function(ev)
                local buf = ev.buf
                
                if not buf or not vim.api.nvim_buf_is_valid(buf) then
                    return
                end
                
                vim.schedule(function()
                    if not vim.api.nvim_buf_is_valid(buf) then
                        return
                    end
                    
                    local wins = vim.fn.win_findbuf(buf)
                    if #wins == 0 then
                        return
                    end
                    local win = wins[1]
                    
                    if not win or not vim.api.nvim_win_is_valid(win) then
                        return
                    end
                    
                    -- Only set minimal window options for clean look
                    pcall(function()
                        vim.wo[win].number = false
                        vim.wo[win].relativenumber = false
                        vim.wo[win].signcolumn = 'no'
                        vim.wo[win].cursorline = false
                        vim.wo[win].cursorcolumn = false
                    end)

                    -- Dashboard interaction lockdown: disable mouse & editing on dashboard
                    vim.b[buf]._prev_mouse = vim.o.mouse
                    vim.o.mouse = ''
                    local opts = { buffer = buf, silent = true, nowait = true }
                    -- Block editing/selecting/copy/paste keys; keep only navigation
                    for _, lhs in ipairs({ 'i','a','o','O','c','v','V','<C-v>','y','Y','p','P','d','x','s','S' }) do
                        vim.keymap.set('n', lhs, '<Nop>', opts)
                    end
                end)
            end,
        })
        
        -- Restore mouse and make sure tabline returns when leaving dashboard
        vim.api.nvim_create_autocmd("BufLeave", {
            group = dashboard_group,
            callback = function(ev)
                if vim.bo[ev.buf].filetype == 'snacks_dashboard' then
                    if vim.b[ev.buf]._prev_mouse ~= nil then
                        vim.o.mouse = vim.b[ev.buf]._prev_mouse
                        vim.b[ev.buf]._prev_mouse = nil
                    end
                    vim.schedule(function() vim.o.showtabline = 2 end)
                end
            end,
        })
        
        -- No need to restore anything - dashboard doesn't override global settings anymore
        
        -- Style the explorer and input to match theme
        local theme_group = vim.api.nvim_create_augroup("SnacksThemeIntegration", { clear = true })
        
        vim.api.nvim_create_autocmd({"FileType", "ColorScheme"}, {
            group = theme_group,
            pattern = {"snacks_input", "snacks_explorer", "*"},
            callback = function()
                -- Get current colorscheme colors
                local colors = {}
                if vim.g.colors_name and vim.g.colors_name:match("catppuccin") then
                    local ok, palette = pcall(require, "catppuccin.palettes")
                    if ok then
                        colors = palette.get_palette("mocha")
                    end
                end
                
                -- Fallback colors if catppuccin not loaded
                if not colors.blue then
                    colors = {
                        blue = "#89b4fa",
                        mauve = "#cba6f7",
                        lavender = "#b4befe",
                        surface0 = "#313244",
                        surface1 = "#45475a",
                        text = "#cdd6f4",
                        subtext1 = "#bac2de",
                    }
                end
                
                -- Style the input and explorer to remove orange and use theme colors
                vim.api.nvim_set_hl(0, "SnacksInputBorder", { fg = colors.lavender, bg = "NONE" })
                vim.api.nvim_set_hl(0, "SnacksInputNormal", { fg = colors.text, bg = colors.surface0 })
                vim.api.nvim_set_hl(0, "SnacksInputTitle", { fg = colors.mauve, bold = true })
                
                -- Explorer specific highlights - FORCE override orange
                vim.api.nvim_set_hl(0, "SnacksPickerBorder", { fg = colors.lavender, bg = "NONE" })
                vim.api.nvim_set_hl(0, "SnacksPickerTitle", { fg = colors.mauve, bold = true })
                vim.api.nvim_set_hl(0, "SnacksExplorerBorder", { fg = colors.lavender, bg = "NONE" })
                vim.api.nvim_set_hl(0, "SnacksExplorerTitle", { fg = colors.mauve, bold = true })
                vim.api.nvim_set_hl(0, "SnacksExplorerDir", { fg = colors.blue, bold = true })
                vim.api.nvim_set_hl(0, "SnacksExplorerFile", { fg = colors.text })
                vim.api.nvim_set_hl(0, "FloatBorder", { fg = colors.lavender, bg = "NONE" })
                vim.api.nvim_set_hl(0, "FloatTitle", { fg = colors.mauve, bold = true })
            end,
        })

    end,
    
    init = function()
        -- Disable default vim intro
        vim.opt.shortmess:append("I")
        
        -- Setup debug global functions
        vim.api.nvim_create_autocmd("User", {
            pattern = "VeryLazy",
            callback = function()
                -- Setup globals for debugging (lazy-loaded)
                local okS, S = pcall(require, 'snacks')
                if okS and S.debug then
                    _G.dd = function(...)
                        S.debug.inspect(...)
                    end
                    _G.bt = function()
                        S.debug.backtrace()
                    end
                end
                
                -- Override print for `:=` command
                if vim.fn.has("nvim-0.11") == 1 then
                    vim._print = function(_, ...)
                        dd(...)
                    end
                else
                    vim.print = _G.dd
                end
            end,
        })
        
        -- CRITICAL: Dashboard must load AFTER all plugins to avoid buffer conflicts
        if vim.fn.argc() == 0 then
            local startup_group = vim.api.nvim_create_augroup("SnacksDashboardStartup", { clear = true })
            
            vim.api.nvim_create_autocmd("User", {
                group = startup_group,
                pattern = "VeryLazy",
                once = true,
                callback = function()
                    vim.defer_fn(function()
                        local current_buf = vim.api.nvim_get_current_buf()
                        if not vim.api.nvim_buf_is_valid(current_buf) then
                            return
                        end
                        
                        local bufname = vim.api.nvim_buf_get_name(current_buf)
                        local buftype = vim.bo[current_buf].buftype
                        local filetype = vim.bo[current_buf].filetype
                        
                        if bufname == "" and 
                           (buftype == "" or buftype == "nofile") and
                           filetype ~= "snacks_dashboard" then
                            
                            vim.schedule(function()
                                local snacks_ok, snacks = pcall(require, "snacks")
                                if snacks_ok and snacks.dashboard then
                                    -- Safely open dashboard with error handling
                                    local ok, err = pcall(snacks.dashboard.open)
                                    if not ok then
                                        vim.notify("Dashboard failed to open: " .. tostring(err), vim.log.levels.WARN)
                                    end
                                end
                            end)
                        end
                    end, 200)
                end,
            })
        end
    end,
}
