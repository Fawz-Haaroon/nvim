-- ═══════════════════════════════════════════════════════════════════════════════
--  🎯 SNACKS PICKER - Enhanced Picker Complementing Telescope
--  📁 Files | 🔍 Grep | 📋 Buffers | 🕒 Recent | 💻 Commands | 📂 Explorer
-- ═══════════════════════════════════════════════════════════════════════════════

return {
    "folke/snacks.nvim",
    keys = {
        -- 🎯 SNACKS PICKER (Complementary to Telescope)
        { "<leader>sp", function() Snacks.picker.files() end, desc = "📁 Files (Snacks)" },
        { "<leader>sg", function() Snacks.picker.grep() end, desc = "🔍 Grep (Snacks)" },
        { "<leader>sw", function() Snacks.picker.grep_word() end, desc = "🔍 Grep Word (Snacks)", mode = { "n", "x" } },
        { "<leader>sb", function() Snacks.picker.buffers() end, desc = "📋 Buffers (Snacks)" },
        { "<leader>sr", function() Snacks.picker.recent() end, desc = "🕒 Recent (Snacks)" },
        { "<leader>sc", function() Snacks.picker.commands() end, desc = "💻 Commands (Snacks)" },
        { "<leader>sk", function() Snacks.picker.keymaps() end, desc = "⌨️ Keymaps (Snacks)" },
        { "<leader>sh", function() Snacks.picker.help() end, desc = "❓ Help (Snacks)" },
        { "<leader>sH", function() Snacks.picker.highlights() end, desc = "🎨 Highlights (Snacks)" },
        { "<leader>sm", function() Snacks.picker.marks() end, desc = "📍 Marks (Snacks)" },
        { "<leader>sj", function() Snacks.picker.jumps() end, desc = "🦘 Jumps (Snacks)" },
        { "<leader>sq", function() Snacks.picker.qflist() end, desc = "📝 Quickfix (Snacks)" },
        { "<leader>sl", function() Snacks.picker.loclist() end, desc = "📍 Location List (Snacks)" },
        { "<leader>su", function() Snacks.picker.undo() end, desc = "↩️ Undo History (Snacks)" },
        { "<leader>sR", function() Snacks.picker.resume() end, desc = "🔄 Resume (Snacks)" },
        { "<leader>si", function() Snacks.picker.icons() end, desc = "🎨 Icons (Snacks)" },
        
        -- 📂 EXPLORER (Picker-based file explorer)  
        { "<leader>e", function() Snacks.explorer() end, desc = "📂 Explorer (Snacks)" },
        { "<leader>E", function() Snacks.explorer({ cwd = vim.fn.expand("%:p:h") }) end, desc = "📂 Explorer (Current Dir)" },
        
        -- 🔍 LSP INTEGRATION
        { "<leader>sd", function() Snacks.picker.diagnostics() end, desc = "🩺 Diagnostics (Snacks)" },
        { "<leader>sD", function() Snacks.picker.diagnostics_buffer() end, desc = "🩺 Buffer Diagnostics (Snacks)" },
        { "<leader>ss", function() Snacks.picker.lsp_symbols() end, desc = "📊 LSP Symbols (Snacks)" },
        { "<leader>sS", function() Snacks.picker.lsp_workspace_symbols() end, desc = "🏢 Workspace Symbols (Snacks)" },
        { "gd", function() Snacks.picker.lsp_definitions() end, desc = "🎯 Goto Definition (Snacks)" },
        { "gD", function() Snacks.picker.lsp_declarations() end, desc = "📝 Goto Declaration (Snacks)" },
        { "gr", function() Snacks.picker.lsp_references() end, desc = "🔗 References (Snacks)", nowait = true },
        { "gI", function() Snacks.picker.lsp_implementations() end, desc = "⚙️ Goto Implementation (Snacks)" },
        { "gy", function() Snacks.picker.lsp_type_definitions() end, desc = "📝 Goto Type Definition (Snacks)" },
        
        -- 🌿 GIT INTEGRATION
        { "<leader>gb", function() Snacks.picker.git_branches() end, desc = "🌿 Git Branches (Snacks)" },
        { "<leader>gl", function() Snacks.picker.git_log() end, desc = "📜 Git Log (Snacks)" },
        { "<leader>gL", function() Snacks.picker.git_log_line() end, desc = "📜 Git Log Line (Snacks)" },
        { "<leader>gs", function() Snacks.picker.git_status() end, desc = "📊 Git Status (Snacks)" },
        { "<leader>gS", function() Snacks.picker.git_stash() end, desc = "📦 Git Stash (Snacks)" },
        { "<leader>gd", function() Snacks.picker.git_diff() end, desc = "📊 Git Diff (Snacks)" },
        { "<leader>gf", function() Snacks.picker.git_log_file() end, desc = "📜 Git Log File (Snacks)" },
        
        -- 🔍 SEARCH ALTERNATIVES
        { "<leader>/", function() Snacks.picker.lines() end, desc = "🔍 Buffer Lines (Snacks)" },
        { "<leader>?", function() Snacks.picker.grep_buffers() end, desc = "🔍 Grep Buffers (Snacks)" },
    },
    
    opts = {
        -- Enable picker and related features
        picker = { enabled = true },
        explorer = { enabled = true },
        
        -- ⚙️ PICKER CONFIGURATION (Advanced)
        picker = {
            layout = {
                backdrop = 60,
                cycle = true,
                width = 0.9,
                height = 0.9,
                box = "horizontal",
                preview = {
                    width = 0.5,
                    border = "rounded",
                },
            },
            win = {
                input = {
                    keys = {
                        ["<c-p>"] = "preview_toggle",
                        ["<c-l>"] = "layout_toggle",
                    },
                },
            },
            sources = {
                files = {
                    hidden = true,
                    follow_symlinks = true,
                },
                buffers = {
                    current = false,
                },
            },
        },
        
        -- 📂 EXPLORER CONFIGURATION
        explorer = {
            win = {
                position = "right",
                width = 30,
            },
        },
    },
    
    config = function(_, opts)
        local ok, snacks = pcall(require, "snacks")
        if not ok then
            return
        end

        snacks.setup(opts)
        
        vim.notify("🎯 Snacks Picker & Explorer Ready!", vim.log.levels.INFO)
    end,
}